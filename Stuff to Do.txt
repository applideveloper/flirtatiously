-Link up to user/profile.

-Display questions answered/matches with others.
-Calculate matches/percentages
-Pop up question answer. -- random question that isnt answer.

-Write RSpec tests for all models
-Live chat


QUEASTIONS
-What is UJS?

-DMS menu + nav.



-Zip code.
-Picture upload with paperclip or filepicker.io
Omniauth


WHEN DONE:
UI for editing pretty profiles

-Action Mailer for authenticiation


answers - body : null, false


add_index "conversations", ['low-user-id', 'high-user-id'
]

profile - details - user_id - nullfalse

last_online




details

>>>    t.string   "sex"
    t.string   "sexual_orientation"
    t.string   "drugs"
    t.text     "description"
    >>>> ALREADY IN THERE

user
gender
orientation
birthday



user prefs
min_age
max_age
max_distance

user
zipcode - 33071

order("created_at DESC") LIMIT 8


module ApplicationHelper
def nice_time(timestamp)
   Time.at(timestamp).utc.strftime("%B %-d at %l:%M %P")
 end


require_current_user!
require_no_current_user

require_correct_user


dependent:destory on porfile, detail, photo, response


validates the user details
last_online from Time.now


===

min/max validations


add explanation to responses

 add_index "responses", ["user_id", "question_id"],

