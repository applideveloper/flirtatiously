<style>

section.pics {
  display: block;
  width: 448px;
  border: 6px solid #333333;
  border-bottom: 6px solid #333333;
  border-top: 6px solid #333333;
  float: left;
}

section.top-info > section.pics > div.main-pic {
  width: 428px;
  padding: 10px 10px 10px 10px;
  border-bottom: 1px solid #333333;
  } /* the big ass photo */

div.main-pic > img { /* let it expand to as much as hte width it needs*/
    width: 100%;
    height: auto;
    display: block;
}

img.car-pic:hover {
  cursor: pointer;
}

section.pics > ul.thumbs {
/*  margin: 4px;*/
  list-style: none;
  display: block;
  margin: 8px;
}

ul.thumbs > li {
  display: block;
  float: left;
  padding: 2px;
  width: 50px;
  height: 50px;
}
/* so the images just expand to the container! */

ul.thumbs > li > img {
  width: 100%;
  height: 100%;
}

div.image-file-input-wrapper {
  width: 100%;
  height: auto;
  position: relative;

  /*sandwiched between every image. id probably have this just turn on with current_user*/
}

div.image-file-input-wrapper > img {
  width: 100%;
  height: auto;
  display: block;
} /* why is this display: block here but not anywhere else? */
/* because there's an if-else statement with a balnk camera photo */

ul.thumbs div.image-file-input-wrapper > img {
  height: 50px;
  } /* tommy dont want it to expand past 50px */

div.image-file-input-wrapper > input[type="file"] { /* its clear */
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;
}

div.image-file-input-wrapper > input[type="file"]:hover {
 cursor: pointer;
}

div.image-file-input-wrapper .remove { /** this ist he square to remove. if its not there, then we do display: none in-line */
  position: absolute;
  display: block;
  width: 10px;
  height: 10px;
  top: -5px;
  right: -5px;
  background: black;
  z-index: 5;
}

div.image-file-input-wrapper > .progress { /* hidden at first until .busy (uploading) */

  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.7);
  color: red;
  text-align: center;
  display: none;
  z-index: 3;
  overflow: visible !important;
}

div.image-file-input-wrapper.busy > .progress {
  display: block;
}

div.image-file-input-wrapper > img.spinner {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  width: 100%;
  height: 100%;
  z-index: 2;
}

div.image-file-input-wrapper.prepping > img.spinner {
  display: block;
}


ul.thumbs .progress {
  line-height: 50px;
}

.main-pic .progress {
  font-size: 30px;
  line-height: 300px;
  } /* this is for the progress texts */

  div.image-file-input-wrapper > .errors {
    list-style: square;
    font-size: 13px;
    display: none;
    position: absolute;
    left: 20%;
    bottom: 58px;
    width: 215px;
    border: 2px solid red;
    padding: 8px;
    background: white;
    z-index: 6;
  }

  .errors > .remove {
    z-index: 7;
  }

  .main-pic div.image-file-input-wrapper > .errors {
    top: -110px;
    bottom: inherit;
  }

  .errors > .triangle {
    position: absolute;
    bottom: -20px;
    left: 10px;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-top: 10px solid red;
  }

  div.image-file-input-wrapper.errors > .errors {
    display: block;
  }

  ul.thumbs > li > div {
    display: block;
  }

  /* check out viewports afterward */

</style>

Loko at how he stores diff sizes!

1.Store the photos in a container.
2. Have one for the big default one.


<section class="top-info clear-fix">
  <section class="pics">
    <div class="main-pic"></div>
    <ul class="thumbs clear-fix"></ul>
  </section>

  <script type="text/template" id="image-file-input-wrapper">
  <%% var timeStamp = new Date().getTime().toString() %>
  <%%= (!opts.main) ? '<li>' : ''  %>
    <div class="image-file-input-wrapper <%%= (opts.errors) ? 'errors' : '' %>">
      <img class="car-pic" src="<%%= opts.src %>">
      <input class="pic_file" type="file" name="pics[<%%= timeStamp %>][file]">
      <input type="hidden" class="pic_token" name="pics[<%%= timeStamp %>][token]" value="<%%= opts.token %>">
      <span style="<%%= (opts.empty) ? 'display:none;' : ''  %>"
            class="remove">
      </span>
      <span class="progress"></span>
      <span class="errors">
        <div class="triangle"></div>
        <span class="remove"></span>
        <p class="message">
          File must be a picture of type
          <%= Pic::ACCEPTED_TYPES.to_sentence(last_word_connector: ' or ') %>
          under <%= Pic::MAX_SIZE / 1.megabyte %>Mb in size.
          <br><br>
          Please select another file. This one will not be uploaded.
        </p>
      </span>
    </div>
  <%%= (!opts.main)  ? '</li>' : ''  %>
  </script>



  <script>
  $(document).ready(function() {
    var picTemplateFn = _.template($('#image-file-input-wrapper').html());
    // do it for each of the pics. start with the main one
    $('div.main-pic').html(
      //should do it so if its not current_user page, wont even see the file input so no change!
      <% if @listing.pics[0] %>
      picTemplateFn({opts:
                      {src: '<%= @listing.pics[0].file.url %>',
                       main: true,
                       errors: <%= @listing.pics[0].invalid? %>,
                       token: '<%= @listing.pics[0].token %>'}
                    })
      <% else %>
      picTemplateFn({opts:
                      {empty:  true,
                       main:   true,
                       src:    '<%= asset_path "camera_icon.png" %>'}
                    })
      <% end %>
    );

    $('div.main-pic').on('change', 'input.pic_file', function() {
      readUrl(this);
    });

    $('div.main-pic').on('click', '.remove', function() {
      var picWrap = picTemplateFn({opts:
                                    {main: true,
                                     empty: true,
                                     src: '<%= asset_path "camera_icon.png" %>'}
                                  });
      $('div.main-pic').html(picWrap);
    });


    <% thumbs = @listing.pics[1..-1] %>
    <% thumbs && thumbs.each do |pic| %>
    //will i need ul.thumbs?
    $('ul.thumbs').append(picTemplateFn({opts:
                                          {src: '<%= pic.file.url %>',
                                           errors: <%= pic.invalid? %>,
                                           token: '<%= pic.token %>'}
                                        }));
    <% end %>
    //no matter what, display picWrap. tahts just an empty one!
    var picWrap = picTemplateFn({opts:
                                  {empty: true, // so doesnt display x button
                                   src: '<%=asset_path "camera_icon.png" %>'}
                                });
    $('ul.thumbs').append(picWrap);

    $('ul.thumbs').on('change', 'input.pic_file', function(event) {
      readUrl(this); //probably auto-uploads!
      ensureLastEmptyPic();
    });

    $('ul.thumbs').on('click', 'span.remove', function() {
      $(this).parents('li').remove(); // clicking that button will remove the li parents
    });

    function readUrl(input) {
      if (input.files && input.files[0]) { //for multiple files.
        var file = input.files[0]
        var $fileInput = $(input);

        if ( validateImageSize(file) && validateImageType(file) ) {
          $fileInput.parent().removeClass('errors'); //just in case already uploaded
          $fileInput.parent().addClass('busy'); //to show progress.
          $fileInput.siblings('.progress').html('0%')
          $fileInput.siblings('.remove').show(); //to set the background to black. to begin animation.


          var reader = new FileReader();
          reader.onload = function(e) {
            var picData = e.target.result; //the binary data that is returned.

            postAttachment(picData, $fileInput); //check out what this does.
            $(input).siblings('img.car-pic').attr('src', picData); //attach the src of the picdata returned. so theres a thumb that uploads.
          };
          reader.onerror = function(e) {
            $fileInput.parent().addClass('errors');
            var oopsMsg = 'Oops. Something went wrong. Please close \
                           this dialog box and try again.';
            $fileInput.siblings('.errors').find('.message').html(oopsMsg);
          };


          reader.readAsDataURL(input.files[0]); //reads the URL of the first files.
        }
        else {
          $fileInput.parent().addClass('errors');
        }
      }
    };

    function validateImageType(file) {
      if (/jpg|jpeg|png|bmp/.exec(file.type)) {
        return true;
      }
    };

    function validateImageSize(file) {
      if (file.size / (1024 * 1024) < 4) {
        return true;
      }
    };

    function postAttachment(picData, $fileInput) {
      $.ajax({
        method: 'POST',
        enctype: 'multipart/form-data', //important!
        url: "<%= pics_url %>",
        data: {pic_data: picData},
        xhr: function () {
          var xhr = new window.XMLHttpRequest();
          xhr.upload.onprogress = progressHandler.bind($fileInput);
          return xhr;
        },
        beforeSend: function() {
          // Set spinner. Now handled in #readUrl with .progress.
        },
        success: function(data) {
          $fileInput.siblings('input.pic_token').val(data['token']);
          //because he's just going to save it! but i dont need that.
        },
        error: function(xhr) {
          $fileInput.parent().addClass('errors');
        },
        complete: function () {
          $bar = $fileInput.siblings('.progress')
          liftProgressVeil($bar, 100, 500, function() {
            $fileInput.removeAttr('name');
            $fileInput.parent().removeClass('busy');
          });
        }
      });
    };

    function progressHandler (e) {
      // Bound to fileInput
      if (e.lengthComputable) {
        var percentComplete = Math.round(e.loaded / e.total * 92);
        var $bar = this.siblings('.progress');
        liftProgressVeil($bar, percentComplete, 100);
      }
    };

    function liftProgressVeil ($bar, percent, duration, cb) {
      $bar.html('' + percent + '%' );
      var height = '' + (100 - percent) + '%';
      $bar.animate({height: height}, {duration: duration, complete: cb});
    };

    function ensureLastEmptyPic() {
      var lastFileInputVal = $('input.pic_file').last().val();
      var lastSrcInputVal = $('input.pic_token').last().val();
      if (lastFileInputVal.length > 0 || lastSrcInputVal.length > 0) {
        var picWrap = picTemplateFn({opts:
                                      {empty: true,
                                       src: '<%=asset_path "camera_icon.png"%>'}
                                    });
        $('ul.thumbs').append(picWrap);
       }
     };
  });
  </script>